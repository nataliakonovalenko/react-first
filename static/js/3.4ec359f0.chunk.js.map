{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/PostForm/PostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","className","s","descriptonBlock","src","photos","large","alt","Preloader","Post","item","message","like","maxLength10","maxLengthCreator","ProfilePostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","memo","postsElements","posts","reverse","map","el","key","id","likesCount","postsBlock","values","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","gerUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.4ec359f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptonBlock\":\"ProfileInfo_descriptonBlock__1BYKX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__19T6N\",\"posts\":\"MyPosts_posts__2cPra\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1BGV3\"};","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || '----'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    },[props.status])\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatus from \"./ProfileStatus\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo  = (props) => {\n    if (!props.profile) {\n        return <Preloader />\n    }\n\n    return (\n        <div>\n            <div className={s.descriptonBlock}>\n                <img src={props.profile.photos.large} alt=\"\"/>\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post  = (props) => {\r\n    return(\r\n        <div className={s.item}>\r\n            <img src=\"https://dbpost.com/wp-content/uploads/2018/06/istock-499609170.jpg\" alt=\"\"/>\r\n            <div>{props.message}</div>\r\n            <div>Like {props.like}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst PostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name=\"newPostText\"\r\n                       placeholder=\"New post text\"\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfilePostReduxForm = reduxForm({\r\n    form: 'addNewPostForm'\r\n})(PostForm)\r\n\r\nexport default ProfilePostReduxForm;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport ProfilePostReduxForm from \"./PostForm/PostForm\";\r\n\r\nconst MyPosts  = React.memo((props) => {\r\n    let postsElements = [...props.posts].reverse().map( el => <Post message={el.message} key={el.id} like={el.likesCount} /> );\r\n\r\n    let addNewPost = (values) => {\r\n        props.newPostText(values.newPostText);\r\n    }\r\n\r\n    return(\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <ProfilePostReduxForm onSubmit={addNewPost}/>\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        newPostText: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return(\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {gerUserProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.gerUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {gerUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}