{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength30","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsElements","dialogs","map","key","messagesElements","messages","el","dialogsItems","values","addNewMessage","newMessageText","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dialogsPage","dispatch","addNewMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCapMC,EAVI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCAvBC,EANC,SAACT,GACb,OACI,yBAAKG,UAAWC,IAAEM,SAAUV,EAAMU,U,iCCGpCC,EAAcC,YAAiB,IAuC/BC,EAAsBC,YAAU,CAClCC,KAAM,yBADkBD,EAhBL,SAACd,GACpB,OACI,0BAAMgB,SAAUhB,EAAMiB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXZ,KAAK,iBACLa,YAAY,qBACZC,SAAU,CAACC,IAAUZ,MAEhC,6BACI,oDAUDa,EAzCC,SAACxB,GACb,IAAIyB,EAAkBzB,EAAM0B,QAAQC,KAAK,SAAAtB,GAAM,OAAI,kBAAC,EAAD,CAAYG,KAAMH,EAAOG,KAAMoB,IAAKvB,EAAOH,GAAIA,GAAIG,EAAOH,QACzG2B,EAAmB7B,EAAM8B,SAASH,KAAK,SAAAI,GAAE,OAAI,kBAAC,EAAD,CAASrB,QAASqB,EAAGrB,QAASkB,IAAKG,EAAG7B,QAMvF,OACI,yBAAKC,UAAWC,IAAEsB,SACd,yBAAKvB,UAAWC,IAAE4B,cACZP,GAEN,yBAAKtB,UAAWC,IAAE0B,UACd,6BAAOD,GACP,kBAAChB,EAAD,CAAqBG,SAXT,SAACiB,GACrBjC,EAAMkC,cAAcD,EAAOE,sB,wDCX/BC,EAA4B,SAACC,GAAD,MAAY,CACxCC,OAAQD,EAAME,KAAKD,S,OCiBRE,sBACXC,aAhBkB,SAACJ,GACnB,MAAO,CACHP,SAAUO,EAAMK,YAAYZ,SAC5BJ,QAASW,EAAMK,YAAYhB,YAIV,SAACiB,GACtB,MAAO,CACHT,cAAe,SAACC,GACZQ,EAASC,YAA2BT,UDThB,SAACU,GAAe,IACtCC,EADqC,iLAGnC,OAAIC,KAAK/C,MAAMsC,OACR,kBAACO,EAAcE,KAAK/C,OADG,kBAAC,IAAD,CAAUO,GAAI,eAHT,GACXyC,IAAMH,WAStC,OAFqCJ,YAAQL,EAARK,CAAqCK,KCM/DN,CAGbhB","file":"static/js/4.86738494.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3wVur\",\"dialogsItems\":\"Dialogs_dialogsItems___HyFA\",\"active\":\"Dialogs_active__27z6f\",\"dialog\":\"Dialogs_dialog__3BWoP\",\"messages\":\"Dialogs_messages__1pnhK\",\"message\":\"Dialogs_message__yUVhq\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogs.map( dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\r\n    let messagesElements = props.messages.map( el => <Message message={el.message} key={el.id}/>);\r\n\r\n    let addNewMessageText = (values) => {\r\n        props.addNewMessage(values.newMessageText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n                <AddMessageReduxForm onSubmit={addNewMessageText}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name=\"newMessageText\"\r\n                       placeholder=\"Enter your message\"\r\n                       validate={[required, maxLength30]} />\r\n            </div>\r\n            <div>\r\n                <button>Add message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({\r\n    form: 'dialogAdddMessageForm'\r\n})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect= (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport {addNewMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.dialogsPage.messages,\r\n        dialogs: state.dialogsPage.dialogs\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewMessage: (newMessageText) => {\r\n            dispatch(addNewMessageActionCreator(newMessageText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}